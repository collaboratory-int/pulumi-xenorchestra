// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Xenorchestra
{
    [Obsolete(@"xenorchestra.index/getresourceset.getResourceSet has been deprecated in favor of xenorchestra.index/getxoaresourceset.getXoaResourceSet")]
    public static class GetResourceSet
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Xenorchestra = Pulumi.Xenorchestra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rs = Xenorchestra.GetXoaResourceSet.Invoke(new()
        ///     {
        ///         Name = "my resource set",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetResourceSetResult> InvokeAsync(GetResourceSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourceSetResult>("xenorchestra:index/getResourceSet:getResourceSet", args ?? new GetResourceSetArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Xenorchestra = Pulumi.Xenorchestra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rs = Xenorchestra.GetXoaResourceSet.Invoke(new()
        ///     {
        ///         Name = "my resource set",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResourceSetResult> Invoke(GetResourceSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceSetResult>("xenorchestra:index/getResourceSet:getResourceSet", args ?? new GetResourceSetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Xenorchestra = Pulumi.Xenorchestra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rs = Xenorchestra.GetXoaResourceSet.Invoke(new()
        ///     {
        ///         Name = "my resource set",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResourceSetResult> Invoke(GetResourceSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceSetResult>("xenorchestra:index/getResourceSet:getResourceSet", args ?? new GetResourceSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource set to look up.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetResourceSetArgs()
        {
        }
        public static new GetResourceSetArgs Empty => new GetResourceSetArgs();
    }

    public sealed class GetResourceSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource set to look up.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetResourceSetInvokeArgs()
        {
        }
        public static new GetResourceSetInvokeArgs Empty => new GetResourceSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceSetResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the resource set to look up.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetResourceSetResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
