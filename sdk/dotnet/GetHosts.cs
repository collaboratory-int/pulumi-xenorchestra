// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Xenorchestra
{
    [Obsolete(@"xenorchestra.index/gethosts.getHosts has been deprecated in favor of xenorchestra.index/getxoahosts.getXoaHosts")]
    public static class GetHosts
    {
        /// <summary>
        /// Use this data source to filter Xenorchestra hosts by certain criteria (name_label, tags) for use in other resources.
        /// </summary>
        public static Task<GetHostsResult> InvokeAsync(GetHostsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostsResult>("xenorchestra:index/getHosts:getHosts", args ?? new GetHostsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to filter Xenorchestra hosts by certain criteria (name_label, tags) for use in other resources.
        /// </summary>
        public static Output<GetHostsResult> Invoke(GetHostsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostsResult>("xenorchestra:index/getHosts:getHosts", args ?? new GetHostsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to filter Xenorchestra hosts by certain criteria (name_label, tags) for use in other resources.
        /// </summary>
        public static Output<GetHostsResult> Invoke(GetHostsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostsResult>("xenorchestra:index/getHosts:getHosts", args ?? new GetHostsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The pool id used to filter the resulting hosts by.
        /// </summary>
        [Input("poolId", required: true)]
        public string PoolId { get; set; } = null!;

        /// <summary>
        /// The host field to sort the results by (id and name_label are supported).
        /// </summary>
        [Input("sortBy")]
        public string? SortBy { get; set; }

        /// <summary>
        /// Valid options are `asc` or `desc` and sort order is applied to `sort_by` argument.
        /// </summary>
        [Input("sortOrder")]
        public string? SortOrder { get; set; }

        [Input("tags")]
        private List<string>? _tags;

        /// <summary>
        /// The tags (labels) applied to the given entity.
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        public GetHostsArgs()
        {
        }
        public static new GetHostsArgs Empty => new GetHostsArgs();
    }

    public sealed class GetHostsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The pool id used to filter the resulting hosts by.
        /// </summary>
        [Input("poolId", required: true)]
        public Input<string> PoolId { get; set; } = null!;

        /// <summary>
        /// The host field to sort the results by (id and name_label are supported).
        /// </summary>
        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        /// <summary>
        /// Valid options are `asc` or `desc` and sort order is applied to `sort_by` argument.
        /// </summary>
        [Input("sortOrder")]
        public Input<string>? SortOrder { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags (labels) applied to the given entity.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public GetHostsInvokeArgs()
        {
        }
        public static new GetHostsInvokeArgs Empty => new GetHostsInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostsResult
    {
        /// <summary>
        /// The resulting hosts after applying the argument filtering.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHostsHostResult> Hosts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The primary host of the pool.
        /// </summary>
        public readonly string Master;
        /// <summary>
        /// The pool id used to filter the resulting hosts by.
        /// </summary>
        public readonly string PoolId;
        /// <summary>
        /// The host field to sort the results by (id and name_label are supported).
        /// </summary>
        public readonly string? SortBy;
        /// <summary>
        /// Valid options are `asc` or `desc` and sort order is applied to `sort_by` argument.
        /// </summary>
        public readonly string? SortOrder;
        /// <summary>
        /// The tags (labels) applied to the given entity.
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetHostsResult(
            ImmutableArray<Outputs.GetHostsHostResult> hosts,

            string id,

            string master,

            string poolId,

            string? sortBy,

            string? sortOrder,

            ImmutableArray<string> tags)
        {
            Hosts = hosts;
            Id = id;
            Master = master;
            PoolId = poolId;
            SortBy = sortBy;
            SortOrder = sortOrder;
            Tags = tags;
        }
    }
}
